// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/messages/create": {
            "post": {
                "description": "Create a new message associated with a given node",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Create a new message for a specific node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message Type",
                        "name": "messageType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message Content",
                        "name": "messageContent",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Node is wrong type",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/messages/delete": {
            "post": {
                "description": "Delete a specific message associated with a node using its ID",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Delete a message by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "messageId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node object after deletion",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Message does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to delete message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/messages/update": {
            "post": {
                "description": "Update the content of a specific message using its ID",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Update a message by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "messageId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Message Content",
                        "name": "newMessageContent",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Message ID does not exist in node range",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/nodes/create": {
            "post": {
                "description": "Create a new node with the specified type and range",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Create a new node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeTitle for the Node",
                        "name": "nodeTitle",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "nodeType for the Node",
                        "name": "nodeType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Location for the Node",
                        "name": "location",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created Node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Create Node fail",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/nodes/delete": {
            "post": {
                "description": "Delete a new node with the specified ID",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Delete a new node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeID for the Node",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully delete Node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Delete Node fail",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/nodes/next": {
            "post": {
                "description": "Update the next node ID for the specified node",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Update the next node of a specific node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Next Node ID",
                        "name": "nodeNext",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Node is not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/nodes/previous": {
            "post": {
                "description": "Update the previous node ID for the specified node",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Update the previous node of a specific node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Previous Node ID",
                        "name": "nodePrevious",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Node is not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/nodes/title": {
            "post": {
                "description": "Update the title for the specified node",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Update the title of a specific node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Node Title",
                        "name": "nodeTitle",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Node is not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/quickreplies/create": {
            "post": {
                "description": "Create a new quick reply associated with a given node",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quickreplies"
                ],
                "summary": "Create a new quick reply for a specific node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Button Name",
                        "name": "buttonName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reply Content",
                        "name": "reply",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quick reply created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Node is wrong type",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/quickreplies/delete": {
            "post": {
                "description": "Delete a specific quick reply associated with a node using its ID",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quickreplies"
                ],
                "summary": "Delete a quick reply by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Quick Reply ID",
                        "name": "quickReplyId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node updated successfully after deleting quick reply",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "QuickReply does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update node",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/quickreplies/update": {
            "post": {
                "description": "Update the button name and reply content of a specific quick reply associated with a node",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quickreplies"
                ],
                "summary": "Update a quick reply by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Quick Reply ID",
                        "name": "quickReplyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Button Name",
                        "name": "newButtonName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Reply Content",
                        "name": "newReply",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quick reply updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "QuickReply does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update quick reply",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Line Bot API",
	Description:      "This is a sample server for Line Bot API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
